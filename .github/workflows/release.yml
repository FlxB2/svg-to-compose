name: Release
#on:
#  push:
#    tags:
#      - 'v*.*.*'
on: pull_request # for test purpose.

jobs:
  create-release-binaries:
    strategy:
      matrix:
         os: [macos-latest, windows-latest, ubuntu-latest]

    runs-on: ${{matrix.os}}
    env:
      file-name: s2c
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - name: Build Native Binary for ${{ matrix.os }}
        if: matrix.os == 'macos-latest'
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-version: wrapper
          job-id: ${{ matrix.os }}
          arguments: releaseMacOS

      - name: Build Native Binary for ${{ matrix.os }}
        if: matrix.os == 'windows-latest'
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-version: wrapper
          job-id: ${{ matrix.os }}
          arguments: releaseWindows

      - name: Build Native Binary for ${{ matrix.os }}
        if: matrix.os == 'ubuntu-latest'
        uses: burrunan/gradle-cache-action@v1
        with:
          gradle-version: wrapper
          job-id: ${{ matrix.os }}
          arguments: releaseLinux

      - name: Uploading macos Arm64 binaries
        uses: actions/upload-artifact@v4
        if: matrix.os == 'macos-latest'
        with:
          name: ${{ env.file-name }}-macosArm64-binaries # add tag to file name.
          path: ${{ github.workspace }}/shared/build/macosArm64/releaseExecutable/
          if-no-files-found: error

      - name: Uploading macos x64 binaries
        uses: actions/upload-artifact@v4
        if: matrix.os == 'macos-latest'
        with:
          name: ${{ env.file-name }}-macosX64-binaries # add tag to file name.
          path: ${{ github.workspace }}/shared/build/macosX64/releaseExecutable/
          if-no-files-found: error

      - name: Uploading linux binaries
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          name: ${{ env.file-name }}-macosX64-binaries # add tag to file name.
          path: ${{ github.workspace }}/shared/build/linuxX64/releaseExecutable/
          if-no-files-found: error

      - name: Uploading linux binaries
        uses: actions/upload-artifact@v4
        if: matrix.os == 'windows-latest'
        with:
          name: ${{ env.file-name }}-macosX64-binaries # add tag to file name.
          path: ${{ github.workspace }}/shared/build/mingwX64/releaseExecutable/
          if-no-files-found: error
  upload-to-release:
    runs-on: ubuntu-latest
    needs: create-release-binaries
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v3
        with:
            path: artifacts
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: artifacts
      - name: Create Github release
        uses: marvinpinto/actions@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: development
          draft: true # For test purposes. Should be false
          prerelease: true # For test purposes. Should be false
          files: |
            artifacts/*
